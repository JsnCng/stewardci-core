apiVersion: v1
kind: ConfigMap
metadata:
  name: steward-pipelineruns
  namespace: {{ .Values.targetNamespace.name | quote }}
  labels:
    {{- include "steward.labels" . | nindent 4 }}
    {{- include "steward.runController.componentLabel" . | nindent 4 }}
data:
  _example: |
    ########################
    # Configuration examples
    ########################

    # Copy and paste example settings directly under `.data` of this configmap!

    # networkPolicy is the network policy to be created in every pipeline
    # run namespace. The value must be a complete
    # `networkpolicy.networking.k8s.io` resource manifest in YAML format.
    # The `.metadata` section of the manifest can be omitted, as it will
    # be replaced anyway.
    #
    # See https://kubernetes.io/docs/concepts/services-networking/network-policies/
    # for details about Kubernetes network policies.
    #
    # Note that Steward ensures that all pods in pipeline run namespaces are
    # _isolated_ in terms of network policies. The policy defined here adds further
    # egress and/or ingress rules.
    #
    networkPolicy: |
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      spec:
        podSelector: {} # any pod in namespace
        policyTypes:
        - Egress
        - Ingress
        egress:
        - # allow unrestricted outbound connections (may be insecure)
          to:
          - ipBlock:
              cidr: 0.0.0.0/0 # any
        ingress:
        - # allow access from all pods in the same namespace
          from:
          - podSelector: {}

  networkPolicy: {{ default ( .Files.Get "data/pipelineruns-default-networkpolicy.yaml" ) .Values.pipelineRuns.networkPolicy | quote }}
